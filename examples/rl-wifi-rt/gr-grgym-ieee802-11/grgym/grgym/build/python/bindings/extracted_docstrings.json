{"gr::gnugym::constellation_16qam": "\n\nConstructor Specific Documentation:\n\n", "gr::gnugym::constellation_16qam::constellation_16qam": "", "gr::gnugym::constellation_16qam::make": "\n\nConstructor Specific Documentation:\n\n", "gr::gnugym::constellation_64qam": "\n\nConstructor Specific Documentation:\n\n", "gr::gnugym::constellation_64qam::constellation_64qam": "", "gr::gnugym::constellation_64qam::make": "\n\nConstructor Specific Documentation:\n\n", "gr::gnugym::constellation_bpsk": "\n\nConstructor Specific Documentation:\n\n", "gr::gnugym::constellation_bpsk::constellation_bpsk": "", "gr::gnugym::constellation_bpsk::make": "\n\nConstructor Specific Documentation:\n\n", "gr::gnugym::constellation_qpsk": "\n\nConstructor Specific Documentation:\n\n", "gr::gnugym::constellation_qpsk::constellation_qpsk": "", "gr::gnugym::constellation_qpsk::make": "\n\nConstructor Specific Documentation:\n\n", "gr::gnugym::gnugym_moving_average_vect_ff": "<+description of block+>\n\nConstructor Specific Documentation:\n\nReturn a shared_ptr to a new instance of gnugym::gnugym_moving_average_vect.\n\nTo avoid accidental use of raw pointers, gnugym::gnugym_moving_average_vect's constructor is in a private implementation class. gnugym::gnugym_moving_average_vect::make is the public interface for creating new instances.\n\nArgs:\n    vlen : \n    bufferlen : ", "gr::gnugym::gnugym_moving_average_vect_ff::getLastOutput": "", "gr::gnugym::gnugym_moving_average_vect_ff::make": "<+description of block+>\n\nConstructor Specific Documentation:\n\nReturn a shared_ptr to a new instance of gnugym::gnugym_moving_average_vect.\n\nTo avoid accidental use of raw pointers, gnugym::gnugym_moving_average_vect's constructor is in a private implementation class. gnugym::gnugym_moving_average_vect::make is the public interface for creating new instances.\n\nArgs:\n    vlen : \n    bufferlen : ", "gr::gnugym::gnugym_rssi_cb": "<+description of block+>\n\nConstructor Specific Documentation:\n\nReturn a shared_ptr to a new instance of gnugym::gnugym_rssi_cb.\n\nTo avoid accidental use of raw pointers, gnugym::gnugym_rssi_cb's constructor is in a private implementation class. gnugym::gnugym_rssi_cb::make is the public interface for creating new instances.\n\nArgs:\n    freq : \n    bw : \n    log : \n    debug : ", "gr::gnugym::gnugym_rssi_cb::make": "<+description of block+>\n\nConstructor Specific Documentation:\n\nReturn a shared_ptr to a new instance of gnugym::gnugym_rssi_cb.\n\nTo avoid accidental use of raw pointers, gnugym::gnugym_rssi_cb's constructor is in a private implementation class. gnugym::gnugym_rssi_cb::make is the public interface for creating new instances.\n\nArgs:\n    freq : \n    bw : \n    log : \n    debug : ", "gr::gnugym::gnugym_snr_cb": "<+description of block+>\n\nConstructor Specific Documentation:\n\nReturn a shared_ptr to a new instance of gnugym::gnugym_snr_cb.\n\nTo avoid accidental use of raw pointers, gnugym::gnugym_snr_cb's constructor is in a private implementation class. gnugym::gnugym_snr_cb::make is the public interface for creating new instances.\n\nArgs:\n    algo : \n    freq : \n    bw : \n    log : \n    debug : ", "gr::gnugym::gnugym_snr_cb::make": "<+description of block+>\n\nConstructor Specific Documentation:\n\nReturn a shared_ptr to a new instance of gnugym::gnugym_snr_cb.\n\nTo avoid accidental use of raw pointers, gnugym::gnugym_snr_cb's constructor is in a private implementation class. gnugym::gnugym_snr_cb::make is the public interface for creating new instances.\n\nArgs:\n    algo : \n    freq : \n    bw : \n    log : \n    debug : ", "gr::gnugym::equalizer::base": "", "gr::gnugym::equalizer::base::~base": "", "gr::gnugym::equalizer::base::equalize": "", "gr::gnugym::equalizer::base::get_snr": "", "gr::gnugym::equalizer::comb": "", "gr::gnugym::equalizer::comb::equalize": "", "gr::gnugym::equalizer::comb::get_snr": "", "gr::gnugym::constellation_16qam_impl": "", "gr::gnugym::constellation_16qam_impl::constellation_16qam_impl": "", "gr::gnugym::constellation_16qam_impl::~constellation_16qam_impl": "", "gr::gnugym::constellation_16qam_impl::decision_maker": "", "gr::gnugym::constellation_64qam_impl": "", "gr::gnugym::constellation_64qam_impl::constellation_64qam_impl": "", "gr::gnugym::constellation_64qam_impl::~constellation_64qam_impl": "", "gr::gnugym::constellation_64qam_impl::decision_maker": "", "gr::gnugym::constellation_bpsk_impl": "", "gr::gnugym::constellation_bpsk_impl::constellation_bpsk_impl": "", "gr::gnugym::constellation_bpsk_impl::~constellation_bpsk_impl": "", "gr::gnugym::constellation_bpsk_impl::decision_maker": "", "gr::gnugym::constellation_qpsk_impl": "", "gr::gnugym::constellation_qpsk_impl::constellation_qpsk_impl": "", "gr::gnugym::constellation_qpsk_impl::~constellation_qpsk_impl": "", "gr::gnugym::constellation_qpsk_impl::decision_maker": "", "gr::gnugym::gnugym_moving_average_vect_ff_impl": "", "gr::gnugym::gnugym_moving_average_vect_ff_impl::gnugym_moving_average_vect_ff_impl": "", "gr::gnugym::gnugym_moving_average_vect_ff_impl::~gnugym_moving_average_vect_ff_impl": "", "gr::gnugym::gnugym_moving_average_vect_ff_impl::forecast": "", "gr::gnugym::gnugym_moving_average_vect_ff_impl::getLastOutput": "", "gr::gnugym::gnugym_moving_average_vect_ff_impl::general_work": "", "gr::gnugym::gnugym_rssi_cb_impl": "", "gr::gnugym::gnugym_rssi_cb_impl::gnugym_rssi_cb_impl": "", "gr::gnugym::gnugym_rssi_cb_impl::~gnugym_rssi_cb_impl": "", "gr::gnugym::gnugym_rssi_cb_impl::set_bandwidth": "", "gr::gnugym::gnugym_rssi_cb_impl::set_frequency": "", "gr::gnugym::gnugym_rssi_cb_impl::forecast": "", "gr::gnugym::gnugym_rssi_cb_impl::general_work": "", "gr::gnugym::gnugym_rssi_cb_impl::decode_signal_field": "", "gr::gnugym::gnugym_rssi_cb_impl::deinterleave": "", "gr::gnugym::gnugym_snr_cb_impl": "", "gr::gnugym::gnugym_snr_cb_impl::gnugym_snr_cb_impl": "", "gr::gnugym::gnugym_snr_cb_impl::~gnugym_snr_cb_impl": "", "gr::gnugym::gnugym_snr_cb_impl::set_algorithm": "", "gr::gnugym::gnugym_snr_cb_impl::set_bandwidth": "", "gr::gnugym::gnugym_snr_cb_impl::set_frequency": "", "gr::gnugym::gnugym_snr_cb_impl::forecast": "", "gr::gnugym::gnugym_snr_cb_impl::general_work": "", "gr::gnugym::gnugym_snr_cb_impl::decode_signal_field": "", "gr::gnugym::gnugym_snr_cb_impl::deinterleave": "", "gr::gnugym::equalizer::lms": "", "gr::gnugym::equalizer::lms::equalize": "", "gr::gnugym::equalizer::lms::get_snr": "", "gr::gnugym::equalizer::ls": "", "gr::gnugym::equalizer::ls::equalize": "", "gr::gnugym::equalizer::ls::get_snr": "", "gr::gnugym::equalizer::sta": "", "gr::gnugym::equalizer::sta::equalize": "", "gr::gnugym::equalizer::sta::get_snr": ""}